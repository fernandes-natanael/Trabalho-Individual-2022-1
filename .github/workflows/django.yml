name: Django CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    name: build django
    runs-on: ubuntu-latest
    steps:
      - name: Check out code from Github
        uses: actions/checkout@v3
      - name: Build image
        run: |
          docker build library_back -f library_back/Dockerfile -t back/django:$GITHUB_SHA
          docker save -o docker_image_$GITHUB_SHA back/django:$GITHUB_SHA
      - name: Caching image
        uses: actions/cache@v3
        with:
          key: library_back
          path: docker_image_${{ github.sha }}


  test:
    name: run unit testing
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:14
        ports:
          - "5432:5432"
        env:
          POSTGRES_DB: library_db
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.8]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Dependencies
        run: |
          cd library_back/
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Run migrations
        run: |
          cd library_back/
          python manage.py makemigrations
          python manage.py migrate
        env:
          POSTGRES_DB: library_db
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_HOST: localhost
          POSTGRES_PORT: 5432
      - name: Run Tests
        run: |
          cd library_back/
          python manage.py test
        env:
          POSTGRES_DB: library_db
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_HOST: localhost
          POSTGRES_PORT: 5432
  
  lint:
    name: lint code
    runs-on: ubuntu-latest
    steps:
      - name: Setup Python
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Checkout PyTorch
        uses: actions/checkout@master
      - name: Install flake8
        run: pip install flake8
      - name: Run flake8
        working-directory: ./
        run: flake8 --max-line-length=100 library_back
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
